// Generated by view binder compiler. Do not edit!
package com.example.geofencing.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Barrier;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.geofencing.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListItemGeofenceBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Barrier barrier;

  @NonNull
  public final ImageButton deleteIcon;

  @NonNull
  public final TextView itemGeofenceAddress;

  @NonNull
  public final TextView itemGeofenceTitle;

  @NonNull
  public final ImageView locationIcon;

  private ListItemGeofenceBinding(@NonNull ConstraintLayout rootView, @NonNull Barrier barrier,
      @NonNull ImageButton deleteIcon, @NonNull TextView itemGeofenceAddress,
      @NonNull TextView itemGeofenceTitle, @NonNull ImageView locationIcon) {
    this.rootView = rootView;
    this.barrier = barrier;
    this.deleteIcon = deleteIcon;
    this.itemGeofenceAddress = itemGeofenceAddress;
    this.itemGeofenceTitle = itemGeofenceTitle;
    this.locationIcon = locationIcon;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListItemGeofenceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListItemGeofenceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_item_geofence, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListItemGeofenceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.barrier;
      Barrier barrier = ViewBindings.findChildViewById(rootView, id);
      if (barrier == null) {
        break missingId;
      }

      id = R.id.delete_icon;
      ImageButton deleteIcon = ViewBindings.findChildViewById(rootView, id);
      if (deleteIcon == null) {
        break missingId;
      }

      id = R.id.item_geofence_address;
      TextView itemGeofenceAddress = ViewBindings.findChildViewById(rootView, id);
      if (itemGeofenceAddress == null) {
        break missingId;
      }

      id = R.id.item_geofence_title;
      TextView itemGeofenceTitle = ViewBindings.findChildViewById(rootView, id);
      if (itemGeofenceTitle == null) {
        break missingId;
      }

      id = R.id.location_icon;
      ImageView locationIcon = ViewBindings.findChildViewById(rootView, id);
      if (locationIcon == null) {
        break missingId;
      }

      return new ListItemGeofenceBinding((ConstraintLayout) rootView, barrier, deleteIcon,
          itemGeofenceAddress, itemGeofenceTitle, locationIcon);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
